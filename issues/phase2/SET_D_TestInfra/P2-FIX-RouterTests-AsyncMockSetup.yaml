# claim:
#   id: P2-FIX-RouterTests-AsyncMockSetup
#   assignee: claude_agent
#   start_at: 2025-08-09T07:02:09Z
#   note: ""
id: P2-FIX-RouterTests-AsyncMockSetup
phase: 2
layer: API
area: Test
action: RouterTests-AsyncMockSetup
target_file: backend/tests/test_comments_router.py
test_file: backend/tests/test_comments_router.py
depends_on: ["P2-API-Router-Comments-POST", "P2-API-Router-Comments-DELETE", "P2-API-Router-Reactions-Comment", "P2-API-Router-Reactions-Thread"]
spec_refs:
  - "05"    # Backend Design
estimated_loc: 50

specification:
  purpose: "Fix Comments and Reactions router tests failing due to async mock setup issues"
  content_requirements:
    - "Fix Comments router tests (POST/DELETE endpoint failures)"
    - "Fix Reactions router tests (UP/SAVE endpoint failures)"  
    - "Ensure proper async mock setup for database connections"
    - "Match implementation patterns with test mock expectations"

output_format: "Python test implementation + async mock fixes"

constraints:
  - "Do not modify router implementation, only tests"
  - "Follow existing test patterns and conventions"

test_specification:
  validation:
    - "All Comments router tests pass (5 currently failing)"
    - "All Reactions router tests pass (7 currently failing)"
    - "No RuntimeWarning about unawaited coroutines"

definition_of_done:
  - "Backend test suite shows improved pass rate"
  - "Comments and Reactions router tests are green"
# issue:
#   at: 2025-08-09T07:04:41Z
#   note: |
#     発見した問題: コメント・リアクションルータテストの失敗原因が、単純なasync mock設定の問題ではない。
#     
#     具体的な問題:
#     1. test_comments_router.py: 7個のテストが失敗
#        - DELETE /comments/{id} エンドポイントが存在しないか正しく動作しない
#        - GET /threads/{id}/comments エンドポイントのルーティング不整合
#        - サービス層のNotFoundException処理が期待通りに動作しない
#     2. test_reactions_router.py: 8個のテストが失敗  
#        - POST /threads/{id}/reactions エンドポイント未実装の可能性
#        - POST /comments/{id}/reactions エンドポイント未実装の可能性
#        - リアクションサービス全体が実装されていない可能性
#     
#     推奨アプローチ:
#     - まずルーターの実装状況を確認 (comments.py, reactions.py, threads.py)
#     - サービス層の実装確認 (CommentService, ReactionService)  
#     - エンドポイントの欠落を特定し、個別YAMLで実装作業を分割
#     - テスト修正は実装完了後に別途実施
#     
#     影響範囲が広すぎるため、テスト修正ではなく基盤実装の問題として扱う必要がある。
